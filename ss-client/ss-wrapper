#!/bin/bash

set -x

pid=0

_cleanup() {
    ss-nat -f;
    ps -ef | grep ss-redir | grep -v "grep" | awk '{print $1}' | xargs kill;
    #kill -SIGTERM "$pid";
    #wait "$pid";
}

cleanup() {
    echo
    echo -n "Doing cleanup.. "
    _cleanup;
#> /dev/null 2>&1
    echo "done"
}

# SIGTERM -handler
term_handler() {
  if [ $pid -ne 0 ]; then
    cleanup;
  fi
  exit;
}

# setup handlers
# on callback, kill the last background process, which is `tail -f /dev/null` and execute the specified handler
trap 'kill ${!}; term_handler' SIGTERM SIGINT

ss-nat -f;
ss-nat -s $SS_SERVER_IP -l $SS_LOCAL_PORT -i /chnroute.txt -u -o;
ss-redir -u -s $SS_SERVER_IP -p $SS_SERVER_PORT -l $SS_LOCAL_PORT -k $SS_PASSWD -m $SS_METHOD $SS_ARGS -b 0.0.0.0 &
pid="$!"

# wait forever
while true
do
  tail -f /dev/null & wait ${!}
done
